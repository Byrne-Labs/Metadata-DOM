using System;
using System.Collections.Generic;
using JetBrains.Annotations;

namespace ByrneLabs.Commons.MetadataDom
{
    [PublicAPI]
    public static class KnownLanguageGuids
    {
        public static readonly Guid C = new Guid(0x63a08714, unchecked((short) 0xfc37), 0x11d2, 0x90, 0x4c, 0x0, 0xc0, 0x4f, 0xa3, 0x02, 0xa1);
        public static readonly Guid Cobol = new Guid(unchecked((int) 0xaf046cd1), unchecked((short) 0xd0e1), 0x11d2, 0x97, 0x7c, 0x0, 0xa0, 0xc9, 0xb4, 0xd5, 0xc);
        public static readonly Guid CPlusPlus = new Guid(0x3a12d0b7, unchecked((short) 0xc26c), 0x11d0, 0xb4, 0x42, 0x0, 0xa0, 0x24, 0x4a, 0x1d, 0xd2);
        public static readonly Guid CSharp = new Guid(0x3f5162f8, 0x07c6, 0x11d3, 0x90, 0x53, 0x0, 0xc0, 0x4f, 0xa3, 0x02, 0xa1);
        public static readonly Guid FSharp = new Guid(unchecked((int) 0xab4f38c9), unchecked((short) 0xb6e6), 0x43ba, 0xbe, 0x3b, 0x58, 0x08, 0x0b, 0x2c, 0xcc, 0xe3);
        public static readonly Guid ILAssembly = new Guid(unchecked((int) 0xaf046cd3), unchecked((short) 0xd0e1), 0x11d2, 0x97, 0x7c, 0x0, 0xa0, 0xc9, 0xb4, 0xd5, 0xc);
        public static readonly Guid Java = new Guid(0x3a12d0b4, unchecked((short) 0xc26c), 0x11d0, 0xb4, 0x42, 0x0, 0xa0, 0x24, 0x4a, 0x1d, 0xd2);
        public static readonly Guid JScript = new Guid(0x3a12d0b6, unchecked((short) 0xc26c), 0x11d0, 0xb4, 0x42, 0x00, 0xa0, 0x24, 0x4a, 0x1d, 0xd2);
        public static readonly IDictionary<Guid, Language> MapFromGuid = new Dictionary<Guid, Language>
        {
            { new Guid(0x63a08714, unchecked((short) 0xfc37), 0x11d2, 0x90, 0x4c, 0x0, 0xc0, 0x4f, 0xa3, 0x02, 0xa1), Language.C },
            { new Guid(0x3a12d0b7, unchecked((short) 0xc26c), 0x11d0, 0xb4, 0x42, 0x0, 0xa0, 0x24, 0x4a, 0x1d, 0xd2), Language.CPlusPlus },
            { new Guid(0x3f5162f8, 0x07c6, 0x11d3, 0x90, 0x53, 0x0, 0xc0, 0x4f, 0xa3, 0x02, 0xa1), Language.CSharp },
            { new Guid(0x3a12d0b8, unchecked((short) 0xc26c), 0x11d0, 0xb4, 0x42, 0x0, 0xa0, 0x24, 0x4a, 0x1d, 0xd2), Language.VisualBasic },
            { new Guid(0x3a12d0b4, unchecked((short) 0xc26c), 0x11d0, 0xb4, 0x42, 0x0, 0xa0, 0x24, 0x4a, 0x1d, 0xd2), Language.Java },
            { new Guid(unchecked((int) 0xaf046cd1), unchecked((short) 0xd0e1), 0x11d2, 0x97, 0x7c, 0x0, 0xa0, 0xc9, 0xb4, 0xd5, 0xc), Language.Cobol },
            { new Guid(unchecked((int) 0xaf046cd2), unchecked((short) 0xd0e1), 0x11d2, 0x97, 0x7c, 0x0, 0xa0, 0xc9, 0xb4, 0xd5, 0xc), Language.Pascal },
            { new Guid(unchecked((int) 0xaf046cd3), unchecked((short) 0xd0e1), 0x11d2, 0x97, 0x7c, 0x0, 0xa0, 0xc9, 0xb4, 0xd5, 0xc), Language.ILAssembly },
            { new Guid(0x3a12d0b6, unchecked((short) 0xc26c), 0x11d0, 0xb4, 0x42, 0x00, 0xa0, 0x24, 0x4a, 0x1d, 0xd2), Language.JScript },
            { new Guid(0xd9b9f7b, 0x6611, 0x11d3, 0xbd, 0x2a, 0x0, 0x0, 0xf8, 0x8, 0x49, 0xbd), Language.SMC },
            { new Guid(0x4b35fde8, 0x07c6, 0x11d3, 0x90, 0x53, 0x0, 0xc0, 0x4f, 0xa3, 0x02, 0xa1), Language.MCPlusPlus },
            { new Guid(unchecked((int) 0xab4f38c9), unchecked((short) 0xb6e6), 0x43ba, 0xbe, 0x3b, 0x58, 0x08, 0x0b, 0x2c, 0xcc, 0xe3), Language.FSharp }
        };
        public static readonly IDictionary<Language, Guid> MapToGuid = new Dictionary<Language, Guid>
        {
            { Language.C, new Guid(0x63a08714, unchecked((short) 0xfc37), 0x11d2, 0x90, 0x4c, 0x0, 0xc0, 0x4f, 0xa3, 0x02, 0xa1) },
            { Language.CPlusPlus, new Guid(0x3a12d0b7, unchecked((short) 0xc26c), 0x11d0, 0xb4, 0x42, 0x0, 0xa0, 0x24, 0x4a, 0x1d, 0xd2) },
            { Language.CSharp, new Guid(0x3f5162f8, 0x07c6, 0x11d3, 0x90, 0x53, 0x0, 0xc0, 0x4f, 0xa3, 0x02, 0xa1) },
            { Language.VisualBasic, new Guid(0x3a12d0b8, unchecked((short) 0xc26c), 0x11d0, 0xb4, 0x42, 0x0, 0xa0, 0x24, 0x4a, 0x1d, 0xd2) },
            { Language.Java, new Guid(0x3a12d0b4, unchecked((short) 0xc26c), 0x11d0, 0xb4, 0x42, 0x0, 0xa0, 0x24, 0x4a, 0x1d, 0xd2) },
            { Language.Cobol, new Guid(unchecked((int) 0xaf046cd1), unchecked((short) 0xd0e1), 0x11d2, 0x97, 0x7c, 0x0, 0xa0, 0xc9, 0xb4, 0xd5, 0xc) },
            { Language.Pascal, new Guid(unchecked((int) 0xaf046cd2), unchecked((short) 0xd0e1), 0x11d2, 0x97, 0x7c, 0x0, 0xa0, 0xc9, 0xb4, 0xd5, 0xc) },
            { Language.ILAssembly, new Guid(unchecked((int) 0xaf046cd3), unchecked((short) 0xd0e1), 0x11d2, 0x97, 0x7c, 0x0, 0xa0, 0xc9, 0xb4, 0xd5, 0xc) },
            { Language.JScript, new Guid(0x3a12d0b6, unchecked((short) 0xc26c), 0x11d0, 0xb4, 0x42, 0x00, 0xa0, 0x24, 0x4a, 0x1d, 0xd2) },
            { Language.SMC, new Guid(0xd9b9f7b, 0x6611, 0x11d3, 0xbd, 0x2a, 0x0, 0x0, 0xf8, 0x8, 0x49, 0xbd) },
            { Language.MCPlusPlus, new Guid(0x4b35fde8, 0x07c6, 0x11d3, 0x90, 0x53, 0x0, 0xc0, 0x4f, 0xa3, 0x02, 0xa1) },
            { Language.FSharp, new Guid(unchecked((int) 0xab4f38c9), unchecked((short) 0xb6e6), 0x43ba, 0xbe, 0x3b, 0x58, 0x08, 0x0b, 0x2c, 0xcc, 0xe3) }
        };
        public static readonly Guid MCPlusPlus = new Guid(0x4b35fde8, 0x07c6, 0x11d3, 0x90, 0x53, 0x0, 0xc0, 0x4f, 0xa3, 0x02, 0xa1);
        public static readonly Guid Pascal = new Guid(unchecked((int) 0xaf046cd2), unchecked((short) 0xd0e1), 0x11d2, 0x97, 0x7c, 0x0, 0xa0, 0xc9, 0xb4, 0xd5, 0xc);
        public static readonly Guid SMC = new Guid(0xd9b9f7b, 0x6611, 0x11d3, 0xbd, 0x2a, 0x0, 0x0, 0xf8, 0x8, 0x49, 0xbd);
        public static readonly Guid VisualBasic = new Guid(0x3a12d0b8, unchecked((short) 0xc26c), 0x11d0, 0xb4, 0x42, 0x0, 0xa0, 0x24, 0x4a, 0x1d, 0xd2);
    }
}
